# -*- coding: utf-8 -*-
"""road.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CCsMGMWgjCK19Jh_euaUpLBQH_EiJjpv
"""

import pandas as pd

import numpy as np

import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split

from sklearn import linear_model

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv("/content/drive/MyDrive/roadspan/dataset.csv")

df

column = ['SurveyDay','NumberOf12HourDays','RefRoad','Total']

df = df.loc[:,column]

#features
features = ['SurveyDay','NumberOf12HourDays','RefRoad']

X = df.loc[:,features]
y = df.loc[:,['Total']]

X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.80, test_size=0.20, random_state=42)

X_train.shape

X_test.shape

y_train.shape

y_test.shape

reg = linear_model.LinearRegression()

#from sklearn.svm import LinearSVC

#linear_svc = LinearSVC(random_state=1, C=0.1)

#linear_svc.fit(X_train, y_train)

#Y_preds = linear_svc.predict(X_test)

#linear_svc.score(X_train, y_train)

result = reg.fit(X_train.values, y_train['Total'].values)
#train, test = train_test_split(df, test_size=0.33, random_state=42)

"""len(test)"""

#response
response = reg.predict([[1,1,1]])
avr = reg.predict([[1,1,1]]).astype(int)
avr

reg.score(X_train,y_train)

def esal(average_traffic):
    #N number of exales
    #structure number sn = 5
    #design life = 25 years
    N = 2
    FE = 0.010
    AADT = average_traffic
    FD = 0.4
    GRN = 41.65
    ESAL = N * FE * AADT * 365 * FD * GRN
    RL = (((average_traffic * 365) - ESAL) / (average_traffic * 365)) * 100

    if RL > 80 :
        print("Road performance : GOOD, ")
    elif RL > 50 :
        print("Road performance : MEDIUM, " )
    else :
        print("Road performance : LOW, ")

    print(RL)

esal(avr)

